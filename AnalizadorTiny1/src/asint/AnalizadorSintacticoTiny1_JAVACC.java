/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTiny1.java */
package asint;

public class AnalizadorSintacticoTiny1_JAVACC implements AnalizadorSintacticoTiny1Constants_JAVACC {

  final public void Sp() throws ParseException {
    S();
    jj_consume_token(0);
  }

  final public void S() throws ParseException {
    Decs();
    LInsts();
  }

  final public void Decs() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Var:
    case Type:
    case Proc:
      LDecs();
      jj_consume_token(42);
      break;
    default:
      jj_la1[0] = jj_gen;

    }
  }

  final public void LDecs() throws ParseException {
    Dec();
    RLDecs();
  }

  final public void RLDecs() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 43:
      jj_consume_token(43);
      Dec();
      RLDecs();
      break;
    default:
      jj_la1[1] = jj_gen;

    }
  }

  final public void Dec() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Var:
      jj_consume_token(Var);
      Tipo();
      jj_consume_token(Id);
      break;
    case Type:
      jj_consume_token(Type);
      Tipo();
      jj_consume_token(Id);
      break;
    case Proc:
      jj_consume_token(Proc);
      jj_consume_token(Id);
      jj_consume_token(44);
      ParamsF();
      jj_consume_token(45);
      Bloque();
      break;
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void ParamsF() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TipoInt:
    case TipoReal:
    case TipoBool:
    case TipoString:
    case Record:
    case Array:
    case Pointer:
    case Id:
      LParamsF();
      break;
    default:
      jj_la1[3] = jj_gen;

    }
  }

  final public void LParamsF() throws ParseException {
    ParamF();
    RLParamsF();
  }

  final public void RLParamsF() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 46:
      jj_consume_token(46);
      ParamF();
      RLParamsF();
      break;
    default:
      jj_la1[4] = jj_gen;

    }
  }

  final public void ParamF() throws ParseException {
    Tipo();
    RParamF();
  }

  final public void RParamF() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 47:
      jj_consume_token(47);
      jj_consume_token(Id);
      break;
    case Id:
      jj_consume_token(Id);
      break;
    default:
      jj_la1[5] = jj_gen;

    }
  }

  final public void Tipo() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case TipoInt:
      jj_consume_token(TipoInt);
      break;
    case TipoReal:
      jj_consume_token(TipoReal);
      break;
    case TipoBool:
      jj_consume_token(TipoBool);
      break;
    case TipoString:
      jj_consume_token(TipoString);
      break;
    case Id:
      jj_consume_token(Id);
      break;
    case Array:
      jj_consume_token(Array);
      jj_consume_token(48);
      jj_consume_token(Entero);
      jj_consume_token(49);
      jj_consume_token(Of);
      Tipo();
      break;
    case Record:
      jj_consume_token(Record);
      jj_consume_token(50);
      LTipos();
      jj_consume_token(51);
      break;
    case Pointer:
      jj_consume_token(Pointer);
      Tipo();
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void LTipos() throws ParseException {
    Tipo();
    jj_consume_token(Id);
    RLTipos();
  }

  final public void RLTipos() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 43:
      jj_consume_token(43);
      Tipo();
      jj_consume_token(Id);
      RLTipos();
      break;
    default:
      jj_la1[7] = jj_gen;

    }
  }

  final public void LInsts() throws ParseException {
    Inst();
    RLInsts();
  }

  final public void RLInsts() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 43:
      jj_consume_token(43);
      Inst();
      RLInsts();
      break;
    default:
      jj_la1[8] = jj_gen;

    }
  }

  final public void Inst() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
    case 54:
    case 55:
      E0();
      jj_consume_token(52);
      E0();
      break;
    case If:
      jj_consume_token(If);
      E0();
      jj_consume_token(Then);
      Insts();
      RInst();
      break;
    case While:
      jj_consume_token(While);
      E0();
      jj_consume_token(Do);
      Insts();
      jj_consume_token(Endwhile);
      break;
    case Read:
      jj_consume_token(Read);
      E0();
      break;
    case Write:
      jj_consume_token(Write);
      E0();
      break;
    case Nl:
      jj_consume_token(Nl);
      break;
    case New:
      jj_consume_token(New);
      E0();
      break;
    case Delete:
      jj_consume_token(Delete);
      E0();
      break;
    case Call:
      jj_consume_token(Call);
      jj_consume_token(Id);
      jj_consume_token(44);
      ParamsR();
      jj_consume_token(45);
      break;
    case 50:
      Bloque();
      break;
    default:
      jj_la1[9] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void RInst() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Endif:
      jj_consume_token(Endif);
      break;
    case Else:
      jj_consume_token(Else);
      Insts();
      jj_consume_token(Endif);
      break;
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void ParamsR() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
    case 54:
    case 55:
      LParamsR();
      break;
    default:
      jj_la1[11] = jj_gen;

    }
  }

  final public void LParamsR() throws ParseException {
    E0();
    RParamsR();
  }

  final public void RParamsR() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 46:
      jj_consume_token(46);
      E0();
      RParamsR();
      break;
    default:
      jj_la1[12] = jj_gen;

    }
  }

  final public void Insts() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Null:
    case If:
    case While:
    case Call:
    case New:
    case Delete:
    case Read:
    case Write:
    case Nl:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
    case 50:
    case 54:
    case 55:
      LInsts();
      break;
    default:
      jj_la1[13] = jj_gen;

    }
  }

  final public void Bloque() throws ParseException {
    jj_consume_token(50);
    RBloque();
  }

  final public void RBloque() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Not:
    case True:
    case False:
    case Var:
    case Type:
    case Proc:
    case Null:
    case If:
    case While:
    case Call:
    case New:
    case Delete:
    case Read:
    case Write:
    case Nl:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
    case 50:
    case 54:
    case 55:
      S();
      jj_consume_token(51);
      break;
    case 51:

      jj_consume_token(51);
      break;
    default:
      jj_la1[14] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E0() throws ParseException {
    E1();
    RE0();
  }

  final public void RE0() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 53:
      jj_consume_token(53);
      E0();
      break;
    case 54:
      jj_consume_token(54);
      E0();
      break;
    default:
      jj_la1[15] = jj_gen;

    }
  }

  final public void E1() throws ParseException {
    E2();
    RE1();
  }

  final public void RE1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case And:
    case Or:
      OpAI1();
      E2();
      RE1();
      break;
    default:
      jj_la1[16] = jj_gen;

    }
  }

  final public void E2() throws ParseException {
    E3();
    RE2();
  }

  final public void RE2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
      OpAI2();
      E3();
      RE2();
      break;
    default:
      jj_la1[17] = jj_gen;

    }
  }

  final public void E3() throws ParseException {
    E4();
    RE3();
  }

  final public void RE3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
    case 62:
    case 63:
      OpNA3();
      E4();
      break;
    default:
      jj_la1[18] = jj_gen;

    }
  }

  final public void E4() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 54:
      jj_consume_token(54);
      E5();
      break;
    case Not:
      jj_consume_token(Not);
      E4();
      break;
    case True:
    case False:
    case Null:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
    case 55:
      E5();
      break;
    default:
      jj_la1[19] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E5() throws ParseException {
    E6();
    RE5();
  }

  final public void RE5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
    case 64:
    case 65:
      OpPA5();
      RE5();
      break;
    default:
      jj_la1[20] = jj_gen;

    }
  }

  final public void E6() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
      jj_consume_token(55);
      E6();
      break;
    case True:
    case False:
    case Null:
    case Cadena:
    case Id:
    case Entero:
    case Real:
    case 44:
      E7();
      break;
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E7() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Entero:
      jj_consume_token(Entero);
      break;
    case Real:
      jj_consume_token(Real);
      break;
    case True:
      jj_consume_token(True);
      break;
    case False:
      jj_consume_token(False);
      break;
    case Cadena:
      jj_consume_token(Cadena);
      break;
    case Id:
      jj_consume_token(Id);
      break;
    case Null:
      jj_consume_token(Null);
      break;
    case 44:
      jj_consume_token(44);
      E0();
      jj_consume_token(45);
      break;
    default:
      jj_la1[22] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpAI1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case And:
      jj_consume_token(And);
      break;
    case Or:
      jj_consume_token(Or);
      break;
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpAI2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 56:
      jj_consume_token(56);
      break;
    case 57:
      jj_consume_token(57);
      break;
    case 58:
      jj_consume_token(58);
      break;
    case 59:
      jj_consume_token(59);
      break;
    case 60:
      jj_consume_token(60);
      break;
    case 61:
      jj_consume_token(61);
      break;
    default:
      jj_la1[24] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpNA3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
      jj_consume_token(55);
      break;
    case 62:
      jj_consume_token(62);
      break;
    case 63:
      jj_consume_token(63);
      break;
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpPA5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      OpIndex();
      break;
    case 64:
    case 65:
      OpReg();
      break;
    default:
      jj_la1[26] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OpIndex() throws ParseException {
    jj_consume_token(48);
    E0();
    jj_consume_token(49);
  }

  final public void OpReg() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 64:
      jj_consume_token(64);
      jj_consume_token(Id);
      break;
    case 65:
      jj_consume_token(65);
      jj_consume_token(Id);
      break;
    default:
      jj_la1[27] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  public AnalizadorSintacticoTiny1TokenManager_JAVACC token_source;
  SimpleCharStream jj_input_stream;
  public Token token, jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[28];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_0();
      jj_la1_1();
      jj_la1_2();
   }
   private static void jj_la1_0() {
      jj_la1_0 = new int[] {0xe0000,0x0,0xe0000,0x60000f00,0x0,0x0,0x60000f00,0x0,0x0,0x1231c000,0x1800000,0x11c000,0x0,0x1231c000,0x123fc000,0x0,0x3000,0x0,0x0,0x11c000,0x0,0x118000,0x118000,0x3000,0x0,0x0,0x0,0x0,};
   }
   private static void jj_la1_1() {
      jj_la1_1 = new int[] {0x0,0x800,0x0,0x81,0x4000,0x8080,0x81,0x800,0x800,0xc413fe,0x0,0xc013c0,0x4000,0xc413fe,0xcc13fe,0x600000,0x0,0x3f000000,0xc0800000,0xc013c0,0x10000,0x8013c0,0x13c0,0x0,0x3f000000,0xc0800000,0x10000,0x0,};
   }
   private static void jj_la1_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x0,0x0,0x0,0x0,0x0,0x3,0x3,};
   }

  public AnalizadorSintacticoTiny1_JAVACC(java.io.InputStream stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTiny1TokenManager_JAVACC(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.InputStream stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny1_JAVACC(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTiny1TokenManager_JAVACC(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny1_JAVACC(AnalizadorSintacticoTiny1TokenManager_JAVACC tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  public void ReInit(AnalizadorSintacticoTiny1TokenManager_JAVACC tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 28; i++) jj_la1[i] = -1;
  }

  final private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  final private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.Vector jj_expentries = new java.util.Vector();
  private int[] jj_expentry;
  private int jj_kind = -1;

  public ParseException generateParseException() {
    jj_expentries.removeAllElements();
    boolean[] la1tokens = new boolean[66];
    for (int i = 0; i < 66; i++) {
      la1tokens[i] = false;
    }
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 28; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 66; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.addElement(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = (int[])jj_expentries.elementAt(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  final public void enable_tracing() {
  }

  final public void disable_tracing() {
  }

                                        }
